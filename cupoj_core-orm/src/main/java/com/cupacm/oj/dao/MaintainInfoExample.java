package com.cupacm.oj.dao;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class MaintainInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    public MaintainInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andMtimeIsNull() {
            addCriterion("mtime is null");
            return (Criteria) this;
        }

        public Criteria andMtimeIsNotNull() {
            addCriterion("mtime is not null");
            return (Criteria) this;
        }

        public Criteria andMtimeEqualTo(Date value) {
            addCriterionForJDBCDate("mtime =", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("mtime <>", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeGreaterThan(Date value) {
            addCriterionForJDBCDate("mtime >", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("mtime >=", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeLessThan(Date value) {
            addCriterionForJDBCDate("mtime <", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("mtime <=", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeIn(List<Date> values) {
            addCriterionForJDBCDate("mtime in", values, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("mtime not in", values, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("mtime between", value1, value2, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("mtime not between", value1, value2, "mtime");
            return (Criteria) this;
        }

        public Criteria andVersionIsNull() {
            addCriterion("version is null");
            return (Criteria) this;
        }

        public Criteria andVersionIsNotNull() {
            addCriterion("version is not null");
            return (Criteria) this;
        }

        public Criteria andVersionEqualTo(String value) {
            addCriterion("version =", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotEqualTo(String value) {
            addCriterion("version <>", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThan(String value) {
            addCriterion("version >", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThanOrEqualTo(String value) {
            addCriterion("version >=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThan(String value) {
            addCriterion("version <", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThanOrEqualTo(String value) {
            addCriterion("version <=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLike(String value) {
            addCriterion("version like", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotLike(String value) {
            addCriterion("version not like", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionIn(List<String> values) {
            addCriterion("version in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotIn(List<String> values) {
            addCriterion("version not in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionBetween(String value1, String value2) {
            addCriterion("version between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotBetween(String value1, String value2) {
            addCriterion("version not between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andVjVersionIsNull() {
            addCriterion("vj_version is null");
            return (Criteria) this;
        }

        public Criteria andVjVersionIsNotNull() {
            addCriterion("vj_version is not null");
            return (Criteria) this;
        }

        public Criteria andVjVersionEqualTo(String value) {
            addCriterion("vj_version =", value, "vjVersion");
            return (Criteria) this;
        }

        public Criteria andVjVersionNotEqualTo(String value) {
            addCriterion("vj_version <>", value, "vjVersion");
            return (Criteria) this;
        }

        public Criteria andVjVersionGreaterThan(String value) {
            addCriterion("vj_version >", value, "vjVersion");
            return (Criteria) this;
        }

        public Criteria andVjVersionGreaterThanOrEqualTo(String value) {
            addCriterion("vj_version >=", value, "vjVersion");
            return (Criteria) this;
        }

        public Criteria andVjVersionLessThan(String value) {
            addCriterion("vj_version <", value, "vjVersion");
            return (Criteria) this;
        }

        public Criteria andVjVersionLessThanOrEqualTo(String value) {
            addCriterion("vj_version <=", value, "vjVersion");
            return (Criteria) this;
        }

        public Criteria andVjVersionLike(String value) {
            addCriterion("vj_version like", value, "vjVersion");
            return (Criteria) this;
        }

        public Criteria andVjVersionNotLike(String value) {
            addCriterion("vj_version not like", value, "vjVersion");
            return (Criteria) this;
        }

        public Criteria andVjVersionIn(List<String> values) {
            addCriterion("vj_version in", values, "vjVersion");
            return (Criteria) this;
        }

        public Criteria andVjVersionNotIn(List<String> values) {
            addCriterion("vj_version not in", values, "vjVersion");
            return (Criteria) this;
        }

        public Criteria andVjVersionBetween(String value1, String value2) {
            addCriterion("vj_version between", value1, value2, "vjVersion");
            return (Criteria) this;
        }

        public Criteria andVjVersionNotBetween(String value1, String value2) {
            addCriterion("vj_version not between", value1, value2, "vjVersion");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionIsNull() {
            addCriterion("frontend_version is null");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionIsNotNull() {
            addCriterion("frontend_version is not null");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionEqualTo(String value) {
            addCriterion("frontend_version =", value, "frontendVersion");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionNotEqualTo(String value) {
            addCriterion("frontend_version <>", value, "frontendVersion");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionGreaterThan(String value) {
            addCriterion("frontend_version >", value, "frontendVersion");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionGreaterThanOrEqualTo(String value) {
            addCriterion("frontend_version >=", value, "frontendVersion");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionLessThan(String value) {
            addCriterion("frontend_version <", value, "frontendVersion");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionLessThanOrEqualTo(String value) {
            addCriterion("frontend_version <=", value, "frontendVersion");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionLike(String value) {
            addCriterion("frontend_version like", value, "frontendVersion");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionNotLike(String value) {
            addCriterion("frontend_version not like", value, "frontendVersion");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionIn(List<String> values) {
            addCriterion("frontend_version in", values, "frontendVersion");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionNotIn(List<String> values) {
            addCriterion("frontend_version not in", values, "frontendVersion");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionBetween(String value1, String value2) {
            addCriterion("frontend_version between", value1, value2, "frontendVersion");
            return (Criteria) this;
        }

        public Criteria andFrontendVersionNotBetween(String value1, String value2) {
            addCriterion("frontend_version not between", value1, value2, "frontendVersion");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table maintain_info
     *
     * @mbg.generated do_not_delete_during_merge Sun Nov 08 15:06:46 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table maintain_info
     *
     * @mbg.generated Sun Nov 08 15:06:46 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}